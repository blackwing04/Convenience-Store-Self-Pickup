<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="bnt_home.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>